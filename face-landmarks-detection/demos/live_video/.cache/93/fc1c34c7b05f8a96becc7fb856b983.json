{"id":"node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","dependencies":[{"name":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js.map","includedInParent":true,"mtime":1758037808350},{"name":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/package.json","includedInParent":true,"mtime":1758036617787},{"name":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/.babelrc","includedInParent":true,"mtime":1758036617787},{"name":"@mediapipe/face_mesh","loc":{"line":56,"column":23,"index":3299},"parent":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","resolved":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@mediapipe/face_mesh/face_mesh.js"},{"name":"@tensorflow/tfjs-core","loc":{"line":57,"column":17,"index":3341},"parent":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","resolved":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../constants","loc":{"line":58,"column":26,"index":3393},"parent":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","resolved":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/constants.js"},{"name":"../shared/calculators/landmarks_to_detection","loc":{"line":59,"column":39,"index":3449},"parent":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","resolved":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/shared/calculators/landmarks_to_detection.js"},{"name":"./detector_utils","loc":{"line":60,"column":31,"index":3529},"parent":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector.js","resolved":"/Users/zhangyanjie/Desktop/25Fall/QEF/tfjs-models/face-landmarks-detection/demos/live_video/node_modules/@tensorflow-models/face-landmarks-detection/mediapipe/detector_utils.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.load = void 0;\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar faceMesh = require(\"@mediapipe/face_mesh\");\nvar tf = require(\"@tensorflow/tfjs-core\");\nvar constants_1 = require(\"../constants\");\nvar landmarks_to_detection_1 = require(\"../shared/calculators/landmarks_to_detection\");\nvar detector_utils_1 = require(\"./detector_utils\");\n/**\n * MediaPipe detector class.\n */\nvar MediaPipeFaceMeshMediaPipeLandmarksDetector = /** @class */ (function () {\n    // Should not be called outside.\n    function MediaPipeFaceMeshMediaPipeLandmarksDetector(config) {\n        var _this = this;\n        // This will be filled out by asynchronous calls to onResults. They will be\n        // stable after `await send` is called on the faces solution.\n        this.width = 0;\n        this.height = 0;\n        this.selfieMode = false;\n        this.faceMeshSolution = new faceMesh.FaceMesh({\n            locateFile: function (path, base) {\n                if (config.solutionPath) {\n                    var solutionPath = config.solutionPath.replace(/\\/+$/, '');\n                    return solutionPath + \"/\" + path;\n                }\n                return base + \"/\" + path;\n            }\n        });\n        this.faceMeshSolution.setOptions({\n            refineLandmarks: config.refineLandmarks,\n            selfieMode: this.selfieMode,\n            maxNumFaces: config.maxFaces,\n        });\n        this.faceMeshSolution.onResults(function (results) {\n            _this.height = results.image.height;\n            _this.width = results.image.width;\n            _this.faces = [];\n            if (results.multiFaceLandmarks !== null) {\n                var landmarksList = results.multiFaceLandmarks;\n                for (var i = 0; i < landmarksList.length; i++) {\n                    var keypoints = _this.translateOutput(landmarksList[i]);\n                    _this.faces.push({\n                        keypoints: keypoints,\n                        box: (0, landmarks_to_detection_1.landmarksToDetection)(keypoints).locationData.relativeBoundingBox\n                    });\n                }\n            }\n        });\n    }\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.translateOutput = function (landmarks) {\n        var _this = this;\n        var keypoints = landmarks.map(function (landmark, i) {\n            var keypoint = {\n                x: landmark.x * _this.width,\n                y: landmark.y * _this.height,\n                z: landmark.z * _this.width,\n            };\n            var name = constants_1.MEDIAPIPE_FACE_MESH_KEYPOINTS.get(i);\n            if (name != null) {\n                keypoint.name = name;\n            }\n            return keypoint;\n        });\n        return keypoints;\n    };\n    /**\n     * Estimates faces for an image or video frame.\n     *\n     * It returns a single face or multiple faces based on the maxFaceMesh\n     * parameter passed to the constructor of the class.\n     *\n     * @param input\n     * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement The input\n     * image to feed through the network.\n     *\n     * @param config Optional.\n     *       flipHorizontal: Optional. Default to false. When image data comes\n     *       from camera, the result has to flip horizontally.\n     *\n     *       staticImageMode: Optional. Defaults to false. Currently unused in\n     * this implementation. Image input types are assumed to be static images, and\n     * video inputs are assumed to be non static images.\n     *\n     * @return An array of `Face`s.\n     */\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.estimateFaces = function (input, estimationConfig) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (estimationConfig && estimationConfig.flipHorizontal &&\n                            (estimationConfig.flipHorizontal !== this.selfieMode)) {\n                            this.selfieMode = estimationConfig.flipHorizontal;\n                            this.faceMeshSolution.setOptions({\n                                selfieMode: this.selfieMode,\n                            });\n                        }\n                        if (!(input instanceof tf.Tensor)) return [3 /*break*/, 2];\n                        _b = ImageData.bind;\n                        return [4 /*yield*/, tf.browser.toPixels(input)];\n                    case 1:\n                        _a = new (_b.apply(ImageData, [void 0, _c.sent(), input.shape[1], input.shape[0]]))();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _a = input;\n                        _c.label = 3;\n                    case 3:\n                        // Cast to GL TexImageSource types.\n                        input = _a;\n                        return [4 /*yield*/, this.faceMeshSolution.send({ image: input })];\n                    case 4:\n                        _c.sent();\n                        return [2 /*return*/, this.faces];\n                }\n            });\n        });\n    };\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.dispose = function () {\n        this.faceMeshSolution.close();\n    };\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.reset = function () {\n        this.faceMeshSolution.reset();\n        this.width = 0;\n        this.height = 0;\n        this.faces = null;\n        this.selfieMode = false;\n    };\n    MediaPipeFaceMeshMediaPipeLandmarksDetector.prototype.initialize = function () {\n        return this.faceMeshSolution.initialize();\n    };\n    return MediaPipeFaceMeshMediaPipeLandmarksDetector;\n}());\n/**\n * Loads the MediaPipe solution.\n *\n * @param modelConfig An object that contains parameters for\n * the MediaPipeFaceMesh loading process. Please find more details of each\n * parameters in the documentation of the\n * `MediaPipeFaceMeshMediaPipeModelConfig` interface.\n */\nfunction load(modelConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var config, detector;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    config = (0, detector_utils_1.validateModelConfig)(modelConfig);\n                    detector = new MediaPipeFaceMeshMediaPipeLandmarksDetector(config);\n                    return [4 /*yield*/, detector.initialize()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, detector];\n            }\n        });\n    });\n}\nexports.load = load;\n"},"sourceMaps":{"js":{"version":3,"file":"detector.js","sourceRoot":"","sources":["../../src/mediapipe/detector.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"e947e8512217ff9357fac7ba9bb559de","cacheData":{"env":{}}}